// generated by Fast Light User Interface Designer (fluid) version 1.0300

#ifndef ClarityUI_h
#define ClarityUI_h
#include <FL/Fl.H>
#include <FL/Fl_Double_Window.H>
#include <FL/Fl_Group.H>
#include <FL/Fl_Box.H>
#include <FL/Fl_Value_Output.H>
#include <FL/Fl_Button.H>
#include <FL/Fl_Spinner.H>

class ClarityUI {
public:
  ClarityUI();
  Fl_Double_Window *DisplayWindow;
  Fl_Value_Output *TipPosition[6];
  Fl_Value_Output *BasePosition[6];
  Fl_Button *beepButton;
private:
  void cb_beepButton_i(Fl_Button*, void*);
  static void cb_beepButton(Fl_Button*, void*);
public:
  Fl_Button *initializeButton;
private:
  void cb_initializeButton_i(Fl_Button*, void*);
  static void cb_initializeButton(Fl_Button*, void*);
public:
  Fl_Button *trackButton;
private:
  void cb_trackButton_i(Fl_Button*, void*);
  static void cb_trackButton(Fl_Button*, void*);
public:
  Fl_Spinner *beepCount;
  bool ConnectButtonClicked; 
  void show(int argc, char** argv);
  bool beepClicked; 
  bool initializeClicked; 
  bool trackClicked; 
};
#endif
