M- cisst 1.0.1
M- Class cmnClassRegister: SetLogMaskClassMatching: log LoD has been set to "-W -E W- E- " for the following classes matching "mtsNDISerial": mtsNDISerial, 
M- osaThread::CreateInternal: create thread named: Unnamed
M- osaThread::CreateInternal: create thread named: Unnamed
D- Class mtsCommandQueuedWriteGeneric: Allocate: resizing argument queue to 64 with "mtsDescriptionComponentProxy"
D- Class mtsCommandQueuedWriteGeneric: Allocate: resizing argument queue to 64 with "mtsComponentStatusControlProxy"
D- Class mtsCommandQueuedWriteGeneric: Allocate: resizing argument queue to 64 with "mtsComponentStatusControlProxy"
D- Class mtsCommandQueuedWriteGeneric: Allocate: resizing argument queue to 64 with "mtsComponentStatusControlProxy"
D- Class mtsCommandQueuedWriteGeneric: Allocate: resizing argument queue to 64 with "mtsDescriptionConnectionProxy"
D- Class mtsCommandQueuedWriteGeneric: Allocate: resizing argument queue to 64 with "mtsStdStringVecProxy"
D- Class mtsCommandQueuedWriteGeneric: Allocate: resizing argument queue to 64 with "mtsDescriptionConnectionProxy"
D- Class mtsCommandQueuedWriteGeneric: Allocate: resizing argument queue to 64 with "mtsStdStringVecProxy"
D- Class mtsCommandQueuedWriteGeneric: Allocate: resizing argument queue to 64 with "mtsDescriptionComponentProxy"
D- Class mtsCommandQueuedWriteGeneric: Allocate: resizing argument queue to 64 with "mtsComponentStatusControlProxy"
D- Class mtsCommandQueuedWriteGeneric: Allocate: resizing argument queue to 64 with "mtsComponentStatusControlProxy"
D- Class mtsCommandQueuedWriteGeneric: Allocate: resizing argument queue to 64 with "mtsComponentStatusControlProxy"
D- Class mtsCommandQueuedWriteGeneric: Allocate: resizing argument queue to 64 with "mtsDescriptionConnectionProxy"
D- Class mtsCommandQueuedWriteGeneric: Allocate: resizing argument queue to 64 with "mtsStdStringVecProxy"
D- Class mtsCommandQueuedWriteGeneric: Allocate: resizing argument queue to 64 with "mtsDescriptionConnectionProxy"
D- Class mtsCommandQueuedWriteGeneric: Allocate: resizing argument queue to 64 with "mtsStdStringVecProxy"
D- Class mtsCommandQueuedWriteGeneric: Allocate: resizing argument queue to 64 with "mtsDescriptionComponentProxy"
D- Class mtsCommandQueuedWriteGeneric: Allocate: resizing argument queue to 64 with "mtsComponentStatusControlProxy"
D- Class mtsCommandQueuedWriteGeneric: Allocate: resizing argument queue to 64 with "mtsComponentStatusControlProxy"
D- Class mtsCommandQueuedWriteGeneric: Allocate: resizing argument queue to 64 with "mtsComponentStatusControlProxy"
D- Class mtsCommandQueuedWriteGeneric: Allocate: resizing argument queue to 64 with "mtsDescriptionConnectionProxy"
D- Class mtsCommandQueuedWriteGeneric: Allocate: resizing argument queue to 64 with "mtsDescriptionConnectionProxy"
D- Class mtsCommandQueuedWriteGeneric: Allocate: resizing argument queue to 64 with "mtsBool"
-W Class mtsNDISerial: Construct: CalibratePivot requires cisstNetlib which is missing
D- Class mtsCommandQueuedWriteGeneric: Allocate: resizing argument queue to 64 with "mtsComponentStatusControlProxy"
D- Class mtsCommandQueuedWriteGeneric: Allocate: resizing argument queue to 64 with "mtsComponentStatusControlProxy"
D- Class mtsCommandQueuedWriteGeneric: Allocate: resizing argument queue to 64 with "mtsComponentStatusControlProxy"
D- Class mtsCommandQueuedWriteGeneric: Allocate: resizing argument queue to 64 with "mtsInt"
D- Class mtsCommandQueuedWriteGeneric: Allocate: resizing argument queue to 64 with "mtsStdString"
D- Class mtsCommandQueuedWriteGeneric: Allocate: resizing argument queue to 64 with "mtsBool"
-M Class clarityClientTask: RemoveInterfaceRequired: removed required interface "ExecIn"
M- Class clarityClientTask: Create: creating thread for task ClarityTask
M- osaThread::CreateInternal: create thread named: Unnamed
M- osaThread::CreateInternal: create thread named: Unnamed
 Class clarityClientTask: Starting StartupInternal (periodic) for ClarityTask
M- Class clarityClientTask: StartupInternal: started for task "ClarityTask"
M- Class clarityClientTask: StartupInternal: ended for task "ClarityTask"
M- osaThread::CreateInternal: create thread named: Unnamed
M- Class guiTask: Create: creating thread for task clarityGUI
M- osaThread::CreateInternal: create thread named: Unnamed
M- osaThread::CreateInternal: create thread named: Unnamed
M- Class guiTask: WaitForState: waiting for task "clarityGUI" to enter state "mtsComponentState
  State:ready"
M- Class guiTask: StartupInternal: started for task "clarityGUI"
M- C Class iTask: guiTaskInterna: : StartupInate: wa ended for task "r state "mtsComponentStatclarityGUI"
0.00302196 seconds.
M- Class guiTask: RunInternal: clarityGUI Wait to start.
M- Class clarityClientTask: Start: starting task ClarityTask
M- Class clarityClientTask: Start: started task ClarityTask
M- Class guiTask: Start: starting task clarityGUI
M- Class guiTask: Start: started task clarityGUI
M- Class guiTask: Kill: task "clarityGUI", current state "mtsComponentState
  State:active"
M- Class guiTask: RunInternal: ending task clarityGUI
M- Class guiTask: CleanupInternal: ended for task "clarityGUI"
